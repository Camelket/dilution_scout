extends layout



mixin content_panel_text_image(id_text, title, text, id_image, image_src)
    div.landingPanel.d-flex-r
        div(id=id_text, class="landingPanelText")
            h2(class="title") #{title}
            p(class="text") #{text}
        div(class="landingPanelImageContainer")
            image(id=id_image, src=image_src, class="landingPanelImage")

mixin feature_panel(feature, description)
    div.featuresGrid
        .featureTitle #{feature}
        div#featureText #{description}

    
block content
    -let lp = landing_panel
    -let cp = content_panel
    div.belowNavbarWrapper
        div#content_wrapper.d-flex-c.navbar_color
            div.backgroundLanding.d-flex-c
                h2#landingTitle #{lp.title_text}
                p#landingText.description #{lp.description}
            div#rootPanelContent.d-flex-c.mt-1
                div(id=id_text, class="landingPanelText")
                    .contentContainerLanding 
                        .d-flex-c
                            each val, key in cp["features"]
                                +feature_panel(key, val)
                    h4.title Projects contained in this site:
                    .contentContainerLanding.mb-3
                        .gridContainerLanding.ml-1.mr-1.mt-1
                            div.titlePanel.ml-1
                                h5.panelTitle.mt-1.mb-1 dilution-scout
                            div.descriptionPanel.mr-1
                                span.descriptionPanel The Frontend of the website with PUG, JavaScript and CSS and the express server as backend.
                                a(href="https://github.com/Camelket/dilution_scout") Github for more info.
                        .gridContainerLanding.ml-1.mr-1.mt-1
                            iv.titlePanel.ml-1
                                h5.panelTitle.mt-1.mb-1 pysec-downloader
                            div.descriptionPanel.mr-1
                                span.descriptionPanel Started out wanting to parse the XBRL myself and didnt find a sec edgar downloader which had the features I wanted, written in Python. Most filing types supported, most of the xbrl api wrapped, creates an index of the downloaded files for each company. pretty bare bones so far, no tests. First pypi package.
                                a(href="https://github.com/Camelket/pysec_downloader") Github for more info.
                        .gridContainerLanding.ml-1.mr-1.mt-1
                            iv.titlePanel.ml-1
                                h5.panelTitle.mt-1.mb-1 sec-scraping
                            div.descriptionPanel.mr-1
                                span.descriptionPanel Does the data accumulation and processing which feeds the database of dilution-scout, written in Python. The Database is PostgreSQL. Can be used on its own as a starting point for your own stock database. Most information is directly from the SEC website/archives.
                                a(href="https://github.com/Camelket/sec_scraping") Github for more info.
                        